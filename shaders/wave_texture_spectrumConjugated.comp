#version 450

// Structs /////////////////////////////

// Input DATA //////////////////////////
layout(set = 0, binding = 0, rg32f) uniform readonly image2D spectrum;

layout(push_constant) uniform Push {
    vec2 resolution;
    uint Size;
}
push;

// Output DATA //////////////////////////

layout(set = 0, binding = 1, rgba32f) uniform writeonly image2D spectrumConjugate;

// Function /////////////////////////////

layout(local_size_x = 32, local_size_y = 32, local_size_z = 1) in;
void main() {
    if (gl_GlobalInvocationID.x >= push.resolution.x || gl_GlobalInvocationID.y >= push.resolution.y) return;

    vec2 h0K = imageLoad(spectrum, ivec2(gl_GlobalInvocationID.xy)).rg;

    vec2 h0MinusK = imageLoad(spectrum, ivec2((push.Size - gl_GlobalInvocationID.x) % push.Size,
                                              (push.Size - gl_GlobalInvocationID.y) % push.Size))
                        .rg;
    vec4 pixel = vec4(h0K.x, h0K.y, h0MinusK.x, -h0MinusK.y);
    imageStore(spectrumConjugate, ivec2(gl_GlobalInvocationID.xy), pixel);
}
